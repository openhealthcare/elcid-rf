# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import jsonfield.fields
import opal.models
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('opal', '0021_patientconsultationreasonforinteraction'),
    ]

    operations = [
        migrations.CreateModel(
            name='Allergies',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('external_system', models.CharField(max_length=255, null=True, blank=True)),
                ('external_identifier', models.CharField(max_length=255, null=True, blank=True)),
                ('created', models.DateTimeField(null=True, blank=True)),
                ('updated', models.DateTimeField(null=True, blank=True)),
                ('consistency_token', models.CharField(max_length=8)),
                ('provisional', models.NullBooleanField()),
                ('details', models.CharField(max_length=255, blank=True)),
                ('allergy_description', models.CharField(max_length=255, blank=True)),
                ('allergy_type_description', models.CharField(max_length=255, blank=True)),
                ('certainty_id', models.CharField(max_length=255, blank=True)),
                ('certainty_description', models.CharField(max_length=255, blank=True)),
                ('allergy_reference_name', models.CharField(max_length=255, blank=True)),
                ('allergen_reference_system', models.CharField(max_length=255, blank=True)),
                ('allergen_reference', models.CharField(max_length=255, blank=True)),
                ('status_id', models.CharField(max_length=255, blank=True)),
                ('status_description', models.CharField(max_length=255, blank=True)),
                ('diagnosis_datetime', models.DateTimeField(null=True, blank=True)),
                ('allergy_start_datetime', models.DateTimeField(null=True, blank=True)),
                ('no_allergies', models.BooleanField(default=False)),
                ('drug_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('created_by', models.ForeignKey(related_name='created_elcid_allergies_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'verbose_name_plural': 'Allergies',
            },
            bases=(opal.models.UpdatesFromDictMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Antimicrobial',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(null=True, blank=True)),
                ('updated', models.DateTimeField(null=True, blank=True)),
                ('consistency_token', models.CharField(max_length=8)),
                ('dose', models.CharField(max_length=255, blank=True)),
                ('start_date', models.DateField(null=True, blank=True)),
                ('end_date', models.DateField(null=True, blank=True)),
                ('comments', models.TextField(null=True, blank=True)),
                ('no_antimicrobials', models.NullBooleanField(default=False)),
                ('route_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('drug_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('delivered_by_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('frequency_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('adverse_event_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('reason_for_stopping_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('adverse_event_fk', models.ForeignKey(blank=True, to='opal.Antimicrobial_adverse_event', null=True)),
                ('created_by', models.ForeignKey(related_name='created_elcid_antimicrobial_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(opal.models.UpdatesFromDictMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(null=True, blank=True)),
                ('updated', models.DateTimeField(null=True, blank=True)),
                ('consistency_token', models.CharField(max_length=8)),
                ('appointment_type', models.CharField(max_length=200, null=True, blank=True)),
                ('appointment_with', models.CharField(max_length=200, null=True, blank=True)),
                ('date', models.DateField(null=True, blank=True)),
                ('created_by', models.ForeignKey(related_name='created_elcid_appointment_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('episode', models.ForeignKey(to='opal.Episode')),
                ('updated_by', models.ForeignKey(related_name='updated_elcid_appointment_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(opal.models.UpdatesFromDictMixin, models.Model),
        ),
        migrations.CreateModel(
            name='BloodCulture',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(null=True, blank=True)),
                ('updated', models.DateTimeField(null=True, blank=True)),
                ('consistency_token', models.CharField(max_length=8)),
                ('lab_number', models.CharField(max_length=255, blank=True)),
                ('date_ordered', models.DateField(null=True, blank=True)),
                ('date_positive', models.DateField(null=True, blank=True)),
                ('source_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('created_by', models.ForeignKey(related_name='created_elcid_bloodculture_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('episode', models.ForeignKey(to='opal.Episode')),
            ],
            options={
                'abstract': False,
            },
            bases=(opal.models.UpdatesFromDictMixin, models.Model),
        ),
        migrations.CreateModel(
            name='BloodCultureIsolate',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(null=True, blank=True)),
                ('updated', models.DateTimeField(null=True, blank=True)),
                ('aerobic', models.BooleanField()),
                ('FISH', models.ForeignKey(related_name='blood_culture_fish_organisms', blank=True, to='opal.Microbiology_organism', null=True)),
                ('blood_culture', models.ForeignKey(related_name='isolates', to='elcid.BloodCulture')),
                ('created_by', models.ForeignKey(related_name='created_elcid_bloodcultureisolate_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('microscopy', models.ForeignKey(related_name='blood_culture_microscopy_organisms', blank=True, to='opal.Microbiology_organism', null=True)),
                ('organism', models.ForeignKey(related_name='blood_culture_isolate_organisms', to='opal.Microbiology_organism')),
                ('resistant_antibiotics', models.ManyToManyField(related_name='blood_culture_resistant', to='opal.Antimicrobial')),
                ('sensitive_antibiotics', models.ManyToManyField(related_name='blood_culture_sensitive', to='opal.Antimicrobial')),
                ('updated_by', models.ForeignKey(related_name='updated_elcid_bloodcultureisolate_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BloodCultureSource',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(unique=True, max_length=255)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Carers',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(null=True, blank=True)),
                ('updated', models.DateTimeField(null=True, blank=True)),
                ('consistency_token', models.CharField(max_length=8)),
                ('gp', models.TextField(null=True, blank=True)),
                ('nurse', models.TextField(null=True, blank=True)),
                ('created_by', models.ForeignKey(related_name='created_elcid_carers_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('patient', models.ForeignKey(to='opal.Patient')),
                ('updated_by', models.ForeignKey(related_name='updated_elcid_carers_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'verbose_name_plural': 'Carers',
            },
            bases=(opal.models.UpdatesFromDictMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Consultant',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(unique=True, max_length=255)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConsultantAtDischarge',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(null=True, blank=True)),
                ('updated', models.DateTimeField(null=True, blank=True)),
                ('consistency_token', models.CharField(max_length=8)),
                ('consultant_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('consultant_fk', models.ForeignKey(blank=True, to='elcid.Consultant', null=True)),
                ('created_by', models.ForeignKey(related_name='created_elcid_consultantatdischarge_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('episode', models.ForeignKey(to='opal.Episode')),
                ('updated_by', models.ForeignKey(related_name='updated_elcid_consultantatdischarge_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(opal.models.UpdatesFromDictMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ContactDetails',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(null=True, blank=True)),
                ('updated', models.DateTimeField(null=True, blank=True)),
                ('consistency_token', models.CharField(max_length=8)),
                ('address_line1', models.CharField(max_length=45, null=True, verbose_name=b'Address line 1', blank=True)),
                ('address_line2', models.CharField(max_length=45, null=True, verbose_name=b'Address line 2', blank=True)),
                ('city', models.CharField(max_length=50, blank=True)),
                ('county', models.CharField(max_length=40, null=True, verbose_name=b'County', blank=True)),
                ('post_code', models.CharField(max_length=10, null=True, verbose_name=b'Post Code', blank=True)),
                ('tel1', models.CharField(max_length=50, null=True, blank=True)),
                ('tel2', models.CharField(max_length=50, null=True, blank=True)),
                ('created_by', models.ForeignKey(related_name='created_elcid_contactdetails_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('patient', models.ForeignKey(to='opal.Patient')),
                ('updated_by', models.ForeignKey(related_name='updated_elcid_contactdetails_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'verbose_name_plural': 'Contact details',
            },
            bases=(opal.models.UpdatesFromDictMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Demographics',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('external_system', models.CharField(max_length=255, null=True, blank=True)),
                ('external_identifier', models.CharField(max_length=255, null=True, blank=True)),
                ('created', models.DateTimeField(null=True, blank=True)),
                ('updated', models.DateTimeField(null=True, blank=True)),
                ('consistency_token', models.CharField(max_length=8)),
                ('hospital_number', models.CharField(max_length=255, blank=True)),
                ('nhs_number', models.CharField(max_length=255, null=True, blank=True)),
                ('surname', models.CharField(max_length=255, blank=True)),
                ('first_name', models.CharField(max_length=255, blank=True)),
                ('middle_name', models.CharField(max_length=255, null=True, blank=True)),
                ('date_of_birth', models.DateField(null=True, blank=True)),
                ('religion', models.CharField(max_length=255, null=True, blank=True)),
                ('date_of_death', models.DateField(null=True, blank=True)),
                ('post_code', models.CharField(max_length=20, null=True, blank=True)),
                ('gp_practice_code', models.CharField(max_length=20, null=True, blank=True)),
                ('death_indicator', models.BooleanField(default=False)),
                ('sex_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('birth_place_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('ethnicity_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('title_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('marital_status_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('birth_place_fk', models.ForeignKey(blank=True, to='opal.Destination', null=True)),
                ('created_by', models.ForeignKey(related_name='created_elcid_demographics_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('ethnicity_fk', models.ForeignKey(blank=True, to='opal.Ethnicity', null=True)),
                ('marital_status_fk', models.ForeignKey(blank=True, to='opal.MaritalStatus', null=True)),
                ('patient', models.ForeignKey(to='opal.Patient')),
                ('sex_fk', models.ForeignKey(blank=True, to='opal.Gender', null=True)),
                ('title_fk', models.ForeignKey(blank=True, to='opal.Title', null=True)),
                ('updated_by', models.ForeignKey(related_name='updated_elcid_demographics_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'verbose_name_plural': 'Demographics',
            },
            bases=(opal.models.UpdatesFromDictMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(null=True, blank=True)),
                ('updated', models.DateTimeField(null=True, blank=True)),
                ('consistency_token', models.CharField(max_length=8)),
                ('provisional', models.NullBooleanField()),
                ('details', models.CharField(max_length=255, blank=True)),
                ('date_of_diagnosis', models.DateField(null=True, blank=True)),
                ('condition_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('condition_fk', models.ForeignKey(blank=True, to='opal.Condition', null=True)),
                ('created_by', models.ForeignKey(related_name='created_elcid_diagnosis_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('episode', models.ForeignKey(to='opal.Episode')),
                ('updated_by', models.ForeignKey(related_name='updated_elcid_diagnosis_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'verbose_name_plural': 'Diagnoses',
            },
            bases=(opal.models.UpdatesFromDictMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Drug_delivered',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(unique=True, max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Drugs delivered',
            },
        ),
        migrations.CreateModel(
            name='DuplicatePatient',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(null=True, blank=True)),
                ('updated', models.DateTimeField(null=True, blank=True)),
                ('consistency_token', models.CharField(max_length=8)),
                ('reviewed', models.BooleanField(default=False)),
                ('merged', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(related_name='created_elcid_duplicatepatient_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('patient', models.ForeignKey(to='opal.Patient')),
                ('updated_by', models.ForeignKey(related_name='updated_elcid_duplicatepatient_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(opal.models.UpdatesFromDictMixin, models.Model),
        ),
        migrations.CreateModel(
            name='FinalDiagnosis',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(null=True, blank=True)),
                ('updated', models.DateTimeField(null=True, blank=True)),
                ('consistency_token', models.CharField(max_length=8)),
                ('source', models.CharField(max_length=255, blank=True)),
                ('contaminant', models.BooleanField(default=False)),
                ('community_related', models.BooleanField(default=False)),
                ('hcai_related', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(related_name='created_elcid_finaldiagnosis_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('episode', models.ForeignKey(to='opal.Episode')),
                ('updated_by', models.ForeignKey(related_name='updated_elcid_finaldiagnosis_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(opal.models.UpdatesFromDictMixin, models.Model),
        ),
        migrations.CreateModel(
            name='GeneralNote',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(null=True, blank=True)),
                ('updated', models.DateTimeField(null=True, blank=True)),
                ('consistency_token', models.CharField(max_length=8)),
                ('date', models.DateField(null=True, blank=True)),
                ('comment', models.TextField()),
                ('created_by', models.ForeignKey(related_name='created_elcid_generalnote_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('episode', models.ForeignKey(to='opal.Episode')),
                ('updated_by', models.ForeignKey(related_name='updated_elcid_generalnote_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(opal.models.UpdatesFromDictMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Hiv_no',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(unique=True, max_length=255)),
            ],
            options={
                'verbose_name': 'HIV refusal reason',
            },
        ),
        migrations.CreateModel(
            name='Imaging',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(null=True, blank=True)),
                ('updated', models.DateTimeField(null=True, blank=True)),
                ('consistency_token', models.CharField(max_length=8)),
                ('date', models.DateField(null=True, blank=True)),
                ('site', models.CharField(max_length=200, null=True, blank=True)),
                ('details', models.TextField(null=True, blank=True)),
                ('imaging_type_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('created_by', models.ForeignKey(related_name='created_elcid_imaging_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('episode', models.ForeignKey(to='opal.Episode')),
            ],
            options={
                'abstract': False,
            },
            bases=(opal.models.UpdatesFromDictMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ImagingTypes',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(unique=True, max_length=255)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Infection',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(null=True, blank=True)),
                ('updated', models.DateTimeField(null=True, blank=True)),
                ('consistency_token', models.CharField(max_length=8)),
                ('site', models.CharField(max_length=255, blank=True)),
                ('source_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('created_by', models.ForeignKey(related_name='created_elcid_infection_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('episode', models.ForeignKey(to='opal.Episode')),
            ],
            options={
                'abstract': False,
            },
            bases=(opal.models.UpdatesFromDictMixin, models.Model),
        ),
        migrations.CreateModel(
            name='InfectionSource',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(unique=True, max_length=255)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Iv_stop',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(unique=True, max_length=255)),
            ],
            options={
                'verbose_name': 'IV stop',
            },
        ),
        migrations.CreateModel(
            name='Line',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(null=True, blank=True)),
                ('updated', models.DateTimeField(null=True, blank=True)),
                ('consistency_token', models.CharField(max_length=8)),
                ('insertion_datetime', models.DateTimeField(null=True, blank=True)),
                ('inserted_by', models.CharField(max_length=255, null=True, blank=True)),
                ('external_length', models.CharField(max_length=255, null=True, blank=True)),
                ('removal_datetime', models.DateTimeField(null=True, blank=True)),
                ('special_instructions', models.TextField()),
                ('button_hole', models.NullBooleanField()),
                ('tunnelled_or_temp', models.CharField(max_length=200, null=True, blank=True)),
                ('fistula', models.NullBooleanField()),
                ('graft', models.NullBooleanField()),
                ('site_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('removal_reason_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('line_type_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('complications_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('complications_fk', models.ForeignKey(blank=True, to='opal.Line_complication', null=True)),
                ('created_by', models.ForeignKey(related_name='created_elcid_line_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('episode', models.ForeignKey(to='opal.Episode')),
                ('line_type_fk', models.ForeignKey(blank=True, to='opal.Line_type', null=True)),
                ('removal_reason_fk', models.ForeignKey(blank=True, to='opal.Line_removal_reason', null=True)),
                ('site_fk', models.ForeignKey(blank=True, to='opal.Line_site', null=True)),
                ('updated_by', models.ForeignKey(related_name='updated_elcid_line_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(opal.models.UpdatesFromDictMixin, models.Model),
        ),
        migrations.CreateModel(
            name='LiverFunction',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(unique=True, max_length=255)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(null=True, blank=True)),
                ('updated', models.DateTimeField(null=True, blank=True)),
                ('consistency_token', models.CharField(max_length=8)),
                ('bed', models.CharField(max_length=255, blank=True)),
                ('category_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('hospital_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('provenance_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('ward_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(opal.models.UpdatesFromDictMixin, models.Model),
        ),
        migrations.CreateModel(
            name='LocationCategory',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(unique=True, max_length=255)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MedicalProcedure',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(unique=True, max_length=255)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MicrobiologyInput',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(null=True, blank=True)),
                ('updated', models.DateTimeField(null=True, blank=True)),
                ('consistency_token', models.CharField(max_length=8)),
                ('when', models.DateTimeField(null=True, blank=True)),
                ('initials', models.CharField(max_length=255, blank=True)),
                ('clinical_discussion', models.TextField(blank=True)),
                ('agreed_plan', models.TextField(blank=True)),
                ('discussed_with', models.CharField(max_length=255, blank=True)),
                ('clinical_advice_given', models.NullBooleanField()),
                ('infection_control_advice_given', models.NullBooleanField()),
                ('change_in_antibiotic_prescription', models.NullBooleanField()),
                ('referred_to_opat', models.NullBooleanField()),
                ('white_cell_count', models.IntegerField(null=True, blank=True)),
                ('c_reactive_protein', models.CharField(max_length=255, blank=True)),
                ('maximum_temperature', models.IntegerField(null=True, blank=True)),
                ('liver_function_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('reason_for_interaction_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('renal_function_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('created_by', models.ForeignKey(related_name='created_elcid_microbiologyinput_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('episode', models.ForeignKey(to='opal.Episode')),
                ('liver_function_fk', models.ForeignKey(blank=True, to='elcid.LiverFunction', null=True)),
                ('reason_for_interaction_fk', models.ForeignKey(blank=True, to='opal.Clinical_advice_reason_for_interaction', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(opal.models.UpdatesFromDictMixin, models.Model),
        ),
        migrations.CreateModel(
            name='MicrobiologyTest',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(null=True, blank=True)),
                ('updated', models.DateTimeField(null=True, blank=True)),
                ('consistency_token', models.CharField(max_length=8)),
                ('test', models.CharField(max_length=255)),
                ('alert_investigation', models.BooleanField(default=False)),
                ('date_ordered', models.DateField(null=True, blank=True)),
                ('details', models.CharField(max_length=255, blank=True)),
                ('microscopy', models.CharField(max_length=255, blank=True)),
                ('organism', models.CharField(max_length=255, blank=True)),
                ('sensitive_antibiotics', models.CharField(max_length=255, blank=True)),
                ('resistant_antibiotics', models.CharField(max_length=255, blank=True)),
                ('result', models.CharField(max_length=255, blank=True)),
                ('igm', models.CharField(max_length=20, blank=True)),
                ('igg', models.CharField(max_length=20, blank=True)),
                ('vca_igm', models.CharField(max_length=20, blank=True)),
                ('vca_igg', models.CharField(max_length=20, blank=True)),
                ('ebna_igg', models.CharField(max_length=20, blank=True)),
                ('hbsag', models.CharField(max_length=20, blank=True)),
                ('anti_hbs', models.CharField(max_length=20, blank=True)),
                ('anti_hbcore_igm', models.CharField(max_length=20, blank=True)),
                ('anti_hbcore_igg', models.CharField(max_length=20, blank=True)),
                ('rpr', models.CharField(max_length=20, blank=True)),
                ('tppa', models.CharField(max_length=20, blank=True)),
                ('viral_load', models.CharField(max_length=20, blank=True)),
                ('parasitaemia', models.CharField(max_length=20, blank=True)),
                ('hsv', models.CharField(max_length=20, blank=True)),
                ('vzv', models.CharField(max_length=20, blank=True)),
                ('syphilis', models.CharField(max_length=20, blank=True)),
                ('c_difficile_antigen', models.CharField(max_length=20, blank=True)),
                ('c_difficile_toxin', models.CharField(max_length=20, blank=True)),
                ('species', models.CharField(max_length=20, blank=True)),
                ('hsv_1', models.CharField(max_length=20, blank=True)),
                ('hsv_2', models.CharField(max_length=20, blank=True)),
                ('enterovirus', models.CharField(max_length=20, blank=True)),
                ('cmv', models.CharField(max_length=20, blank=True)),
                ('ebv', models.CharField(max_length=20, blank=True)),
                ('influenza_a', models.CharField(max_length=20, blank=True)),
                ('influenza_b', models.CharField(max_length=20, blank=True)),
                ('parainfluenza', models.CharField(max_length=20, blank=True)),
                ('metapneumovirus', models.CharField(max_length=20, blank=True)),
                ('rsv', models.CharField(max_length=20, blank=True)),
                ('adenovirus', models.CharField(max_length=20, blank=True)),
                ('norovirus', models.CharField(max_length=20, blank=True)),
                ('rotavirus', models.CharField(max_length=20, blank=True)),
                ('giardia', models.CharField(max_length=20, blank=True)),
                ('entamoeba_histolytica', models.CharField(max_length=20, blank=True)),
                ('cryptosporidium', models.CharField(max_length=20, blank=True)),
                ('spotted_fever_igm', models.CharField(max_length=20, blank=True)),
                ('spotted_fever_igg', models.CharField(max_length=20, blank=True)),
                ('typhus_group_igm', models.CharField(max_length=20, blank=True)),
                ('typhus_group_igg', models.CharField(max_length=20, blank=True)),
                ('scrub_typhus_igm', models.CharField(max_length=20, blank=True)),
                ('scrub_typhus_igg', models.CharField(max_length=20, blank=True)),
                ('hiv_declined_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('created_by', models.ForeignKey(related_name='created_elcid_microbiologytest_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('episode', models.ForeignKey(to='opal.Episode')),
                ('hiv_declined_fk', models.ForeignKey(blank=True, to='elcid.Hiv_no', null=True)),
                ('updated_by', models.ForeignKey(related_name='updated_elcid_microbiologytest_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(opal.models.UpdatesFromDictMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PastMedicalHistory',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(null=True, blank=True)),
                ('updated', models.DateTimeField(null=True, blank=True)),
                ('consistency_token', models.CharField(max_length=8)),
                ('year', models.CharField(max_length=200, blank=True)),
                ('details', models.CharField(max_length=255, blank=True)),
                ('condition_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('condition_fk', models.ForeignKey(blank=True, to='opal.Condition', null=True)),
                ('created_by', models.ForeignKey(related_name='created_elcid_pastmedicalhistory_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('episode', models.ForeignKey(to='opal.Episode')),
                ('updated_by', models.ForeignKey(related_name='updated_elcid_pastmedicalhistory_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'verbose_name_plural': 'Past medical histories',
            },
            bases=(opal.models.UpdatesFromDictMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PresentingComplaint',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(null=True, blank=True)),
                ('updated', models.DateTimeField(null=True, blank=True)),
                ('consistency_token', models.CharField(max_length=8)),
                ('duration', models.CharField(max_length=255, null=True, blank=True)),
                ('details', models.TextField(null=True, blank=True)),
                ('symptom_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('created_by', models.ForeignKey(related_name='created_elcid_presentingcomplaint_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('episode', models.ForeignKey(to='opal.Episode')),
                ('symptom_fk', models.ForeignKey(blank=True, to='opal.Symptom', null=True)),
                ('symptoms', models.ManyToManyField(related_name='presenting_complaints', to='opal.Symptom')),
                ('updated_by', models.ForeignKey(related_name='updated_elcid_presentingcomplaint_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(opal.models.UpdatesFromDictMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PrimaryDiagnosis',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(null=True, blank=True)),
                ('updated', models.DateTimeField(null=True, blank=True)),
                ('consistency_token', models.CharField(max_length=8)),
                ('confirmed', models.BooleanField(default=False)),
                ('condition_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
            ],
            options={
                'verbose_name_plural': 'Primary diagnoses',
            },
            bases=(opal.models.UpdatesFromDictMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PrimaryDiagnosisCondition',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(unique=True, max_length=255)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Procedure',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(null=True, blank=True)),
                ('updated', models.DateTimeField(null=True, blank=True)),
                ('consistency_token', models.CharField(max_length=8)),
                ('date', models.DateField(null=True, blank=True)),
                ('surgical_procedure_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('medical_procedure_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('created_by', models.ForeignKey(related_name='created_elcid_procedure_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('episode', models.ForeignKey(to='opal.Episode')),
                ('medical_procedure_fk', models.ForeignKey(blank=True, to='elcid.MedicalProcedure', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(opal.models.UpdatesFromDictMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Provenance',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(unique=True, max_length=255)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RenalFunction',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(unique=True, max_length=255)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(null=True, blank=True)),
                ('updated', models.DateTimeField(null=True, blank=True)),
                ('consistency_token', models.CharField(max_length=8)),
                ('lab_number', models.CharField(max_length=255, null=True, blank=True)),
                ('profile_code', models.CharField(max_length=255, null=True, blank=True)),
                ('external_identifier', models.CharField(max_length=255, null=True, blank=True)),
                ('profile_description', models.CharField(max_length=255, null=True, blank=True)),
                ('request_datetime', models.DateTimeField(null=True, blank=True)),
                ('observation_datetime', models.DateTimeField(null=True, blank=True)),
                ('last_edited', models.DateTimeField(null=True, blank=True)),
                ('result_status', models.CharField(max_length=255, null=True, blank=True)),
                ('observations', jsonfield.fields.JSONField(null=True, blank=True)),
                ('created_by', models.ForeignKey(related_name='created_elcid_result_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('patient', models.ForeignKey(to='opal.Patient')),
                ('updated_by', models.ForeignKey(related_name='updated_elcid_result_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(opal.models.UpdatesFromDictMixin, models.Model),
        ),
        migrations.CreateModel(
            name='SecondaryDiagnosis',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(null=True, blank=True)),
                ('updated', models.DateTimeField(null=True, blank=True)),
                ('consistency_token', models.CharField(max_length=8)),
                ('co_primary', models.NullBooleanField(default=False)),
                ('condition_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('condition_fk', models.ForeignKey(blank=True, to='opal.Condition', null=True)),
                ('created_by', models.ForeignKey(related_name='created_elcid_secondarydiagnosis_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('episode', models.ForeignKey(to='opal.Episode')),
                ('updated_by', models.ForeignKey(related_name='updated_elcid_secondarydiagnosis_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'verbose_name_plural': 'Secondary diagnoses',
            },
            bases=(opal.models.UpdatesFromDictMixin, models.Model),
        ),
        migrations.CreateModel(
            name='SurgicalProcedure',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(unique=True, max_length=255)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Todo',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(null=True, blank=True)),
                ('updated', models.DateTimeField(null=True, blank=True)),
                ('consistency_token', models.CharField(max_length=8)),
                ('details', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(related_name='created_elcid_todo_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('episode', models.ForeignKey(to='opal.Episode')),
                ('updated_by', models.ForeignKey(related_name='updated_elcid_todo_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(opal.models.UpdatesFromDictMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Travel',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(null=True, blank=True)),
                ('updated', models.DateTimeField(null=True, blank=True)),
                ('consistency_token', models.CharField(max_length=8)),
                ('dates', models.CharField(max_length=255, blank=True)),
                ('did_not_travel', models.NullBooleanField(default=False)),
                ('specific_exposures', models.CharField(max_length=255, blank=True)),
                ('malaria_prophylaxis', models.NullBooleanField(default=False)),
                ('malaria_compliance', models.CharField(max_length=200, null=True, blank=True)),
                ('destination_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('reason_for_travel_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('malaria_drug_ft', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('created_by', models.ForeignKey(related_name='created_elcid_travel_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('destination_fk', models.ForeignKey(blank=True, to='opal.Destination', null=True)),
                ('episode', models.ForeignKey(to='opal.Episode')),
                ('malaria_drug_fk', models.ForeignKey(blank=True, to='opal.Antimicrobial', null=True)),
                ('reason_for_travel_fk', models.ForeignKey(blank=True, to='opal.Travel_reason', null=True)),
                ('updated_by', models.ForeignKey(related_name='updated_elcid_travel_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(opal.models.UpdatesFromDictMixin, models.Model),
        ),
        migrations.AddField(
            model_name='procedure',
            name='surgical_procedure_fk',
            field=models.ForeignKey(blank=True, to='elcid.SurgicalProcedure', null=True),
        ),
        migrations.AddField(
            model_name='procedure',
            name='updated_by',
            field=models.ForeignKey(related_name='updated_elcid_procedure_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True),
        ),
        migrations.AddField(
            model_name='primarydiagnosis',
            name='condition_fk',
            field=models.ForeignKey(blank=True, to='elcid.PrimaryDiagnosisCondition', null=True),
        ),
        migrations.AddField(
            model_name='primarydiagnosis',
            name='created_by',
            field=models.ForeignKey(related_name='created_elcid_primarydiagnosis_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True),
        ),
        migrations.AddField(
            model_name='primarydiagnosis',
            name='episode',
            field=models.ForeignKey(to='opal.Episode'),
        ),
        migrations.AddField(
            model_name='primarydiagnosis',
            name='updated_by',
            field=models.ForeignKey(related_name='updated_elcid_primarydiagnosis_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True),
        ),
        migrations.AddField(
            model_name='microbiologyinput',
            name='renal_function_fk',
            field=models.ForeignKey(blank=True, to='elcid.RenalFunction', null=True),
        ),
        migrations.AddField(
            model_name='microbiologyinput',
            name='updated_by',
            field=models.ForeignKey(related_name='updated_elcid_microbiologyinput_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True),
        ),
        migrations.AddField(
            model_name='location',
            name='category_fk',
            field=models.ForeignKey(blank=True, to='elcid.LocationCategory', null=True),
        ),
        migrations.AddField(
            model_name='location',
            name='created_by',
            field=models.ForeignKey(related_name='created_elcid_location_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True),
        ),
        migrations.AddField(
            model_name='location',
            name='episode',
            field=models.ForeignKey(to='opal.Episode'),
        ),
        migrations.AddField(
            model_name='location',
            name='hospital_fk',
            field=models.ForeignKey(blank=True, to='opal.Hospital', null=True),
        ),
        migrations.AddField(
            model_name='location',
            name='provenance_fk',
            field=models.ForeignKey(blank=True, to='elcid.Provenance', null=True),
        ),
        migrations.AddField(
            model_name='location',
            name='updated_by',
            field=models.ForeignKey(related_name='updated_elcid_location_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True),
        ),
        migrations.AddField(
            model_name='location',
            name='ward_fk',
            field=models.ForeignKey(blank=True, to='opal.Ward', null=True),
        ),
        migrations.AddField(
            model_name='infection',
            name='source_fk',
            field=models.ForeignKey(blank=True, to='elcid.InfectionSource', null=True),
        ),
        migrations.AddField(
            model_name='infection',
            name='updated_by',
            field=models.ForeignKey(related_name='updated_elcid_infection_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True),
        ),
        migrations.AddField(
            model_name='imaging',
            name='imaging_type_fk',
            field=models.ForeignKey(blank=True, to='elcid.ImagingTypes', null=True),
        ),
        migrations.AddField(
            model_name='imaging',
            name='updated_by',
            field=models.ForeignKey(related_name='updated_elcid_imaging_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True),
        ),
        migrations.AddField(
            model_name='bloodculture',
            name='source_fk',
            field=models.ForeignKey(blank=True, to='elcid.BloodCultureSource', null=True),
        ),
        migrations.AddField(
            model_name='bloodculture',
            name='updated_by',
            field=models.ForeignKey(related_name='updated_elcid_bloodculture_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True),
        ),
        migrations.AddField(
            model_name='antimicrobial',
            name='delivered_by_fk',
            field=models.ForeignKey(blank=True, to='elcid.Drug_delivered', null=True),
        ),
        migrations.AddField(
            model_name='antimicrobial',
            name='drug_fk',
            field=models.ForeignKey(blank=True, to='opal.Antimicrobial', null=True),
        ),
        migrations.AddField(
            model_name='antimicrobial',
            name='episode',
            field=models.ForeignKey(to='opal.Episode'),
        ),
        migrations.AddField(
            model_name='antimicrobial',
            name='frequency_fk',
            field=models.ForeignKey(blank=True, to='opal.Antimicrobial_frequency', null=True),
        ),
        migrations.AddField(
            model_name='antimicrobial',
            name='reason_for_stopping_fk',
            field=models.ForeignKey(blank=True, to='elcid.Iv_stop', null=True),
        ),
        migrations.AddField(
            model_name='antimicrobial',
            name='route_fk',
            field=models.ForeignKey(blank=True, to='opal.Antimicrobial_route', null=True),
        ),
        migrations.AddField(
            model_name='antimicrobial',
            name='updated_by',
            field=models.ForeignKey(related_name='updated_elcid_antimicrobial_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True),
        ),
        migrations.AddField(
            model_name='allergies',
            name='drug_fk',
            field=models.ForeignKey(blank=True, to='opal.Antimicrobial', null=True),
        ),
        migrations.AddField(
            model_name='allergies',
            name='patient',
            field=models.ForeignKey(to='opal.Patient'),
        ),
        migrations.AddField(
            model_name='allergies',
            name='updated_by',
            field=models.ForeignKey(related_name='updated_elcid_allergies_subrecords', blank=True, to=settings.AUTH_USER_MODEL, null=True),
        ),
    ]
