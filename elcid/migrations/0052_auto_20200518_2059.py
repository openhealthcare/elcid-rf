# Generated by Django 2.0.13 on 2020-05-18 20:59

from django.db import migrations


def duplicate_lookup_list(old_lookup_list, new_lookup_list, apps):
    new_instances = []
    for line_type in old_lookup_list.objects.all():
        new_instance = new_lookup_list(name=line_type.name)
        new_instances.append(new_instance)

    new_lookup_list.objects.bulk_create(new_instances)

    # Create synonyms
    Synonym = apps.get_model(
        'opal', 'Synonym'
    )
    ContentType = apps.get_model(
        'contenttypes', "ContentType"
    )
    old_lookup_list_ct = ContentType.objects.get_for_model(old_lookup_list)
    new_lookup_list_ct = ContentType.objects.get_for_model(new_lookup_list)

    synonyms = Synonym.objects.filter(content_type=old_lookup_list_ct)

    new_synonyms = []

    for synonym in synonyms:
        line_name = old_lookup_list_ct.objects.get(
            id=synonym.object_id
        ).name
        new_synonyms.append(Synonym(
            content_type=new_organism_ct,
            object_id=new_lookup_list.objects.get(name=line_name).id,
            name=synonym.name
        ))
    Synonym.objects.bulk_create(new_synonyms)



def forwards(apps, schema_editor):
    # Populate elcid Line* for all the opal Line_* lookup lists
    opal_line_type = apps.get_model(
        'opal', 'Line_type'
    )
    LineType = apps.get_model(
        'elcid', 'LineType'
    )

    duplicate_lookup_list(opal_line_type, LineType, apps)

    opal_line_site = apps.get_model(
        'opal', 'Line_site'
    )
    LineSite = apps.get_model(
        'elcid', 'LineSite'
    )

    duplicate_lookup_list(opal_line_site, LineSite, apps)

    opal_line_complication = apps.get_model(
        'opal', 'Line_complication'
    )
    LineComplication = apps.get_model(
        'elcid', 'LineComplication'
    )

    duplicate_lookup_list(opal_line_complication, LineComplication, apps)

    opal_line_removal_reason = apps.get_model(
        'opal', 'Line_removal_reason'
    )
    LineRemovalReason = apps.get_model(
        'elcid', 'LineRemovalReason'
    )

    duplicate_lookup_list(opal_line_removal_reason, LineRemovalReason, apps)




def backwards(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('elcid', '0051_auto_20200518_1758'),
    ]

    run_before = [
        ('opal', '0038_auto_20191206_1449'),
    ]

    operations = [
        migrations.RunPython(
            forwards, backwards
        )
    ]
